import 'package:awesome_dialog/awesome_dialog.dart';import 'package:e_commerce_project/controller/sqflite/sqflite_database.dart';import 'package:e_commerce_project/core/constant/app_routes_name.dart';import 'package:e_commerce_project/data/data_source/static/static.dart';import 'package:e_commerce_project/data/model/item_model.dart';import 'package:flutter/material.dart';import 'package:get/get.dart';import 'package:http/http.dart';import 'package:pull_to_refresh/pull_to_refresh.dart';class CartController extends GetxController {  RefreshController refreshController = RefreshController(initialRefresh: true);  onLoading() {}  onRefresh() async {    try {      await getData();      refreshController.refreshCompleted();      // print (refreshController.headerStatus);      update();    } catch (c) {      refreshController.refreshFailed();      update();    }  }  details_item(id, count) {    Get.toNamed(      AppRouteName.product_details,      arguments: {        'item': getItemFromId(id),        'count': count.toString(),      },      // preventDuplicates: false,    );  }  getData() async {    Cart = await SqfliteData.getData();    id_item_added_to_cart = [];    Cart.forEach((element) {      id_item_added_to_cart.add(element['id_item']);    });    ItemsInCart.clear();    for (int x = 0; x < id_item_added_to_cart.length; x++) {      ItemsInCart.add(getItemFromId(int.parse(id_item_added_to_cart[x])));    }    update();  }  remove_from_cart(context, int index) async {    AwesomeDialog(      context: context,      dialogType: DialogType.question,      animType: AnimType.rightSlide,      title: 'Are you sure to delete the product from your favourites?',      // body: Text('Are you sure to delete the product from your favourites?'),      btnOkOnPress: () async {        await SqfliteData.deleteData(                'id_item = ${id_item_added_to_cart[index]}')            .then((v) async {          id_item_added_to_cart.remove(id_item_added_to_cart[index]);          CartList = await SqfliteData.getData();          Cart = CartList;          update();        });      },      btnCancelOnPress: () {},    ).show();    update();  }  List Cart = [];  @override  void onInit() async {    // TODO: implement onInit    await getData();    super.onInit();  }  getItemFromId(int id) {    for (int x = 0; x < all_items.length; x++) {      if (all_items[x].itemId == id) {        return all_items[x];      }    }  }}