import 'package:e_commerce_project/core/class/crud.dart';import 'package:e_commerce_project/core/constant/app_routes_name.dart';import 'package:e_commerce_project/core/functions/statusRequest.dart';import 'package:e_commerce_project/core/services/services.dart';import 'package:e_commerce_project/data/data_source/remote/home/view_favorits.dart';import 'package:e_commerce_project/data/data_source/remote/update_favorite.dart';import 'package:e_commerce_project/data/data_source/static/static.dart';import 'package:e_commerce_project/data/model/item_model.dart';import 'package:flutter/material.dart';import 'package:get/get.dart';import 'package:pull_to_refresh/pull_to_refresh.dart';class FavoriteController extends GetxController {  Map isFavorite = {};  UpdateFavorite updateFavorite = UpdateFavorite(Crud());  StatusRequest statusRequest = StatusRequest.init;  RefreshController refreshController =      RefreshController(initialRefresh: false);  onLoading() {}  onRefresh() async {    try {      await get_Favorites();      refreshController.loadComplete();    } catch (e) {      refreshController.loadFailed();    }  }  setFavorite(dynamic item_id, dynamic val) async {    isFavorite[item_id] = val;    statusRequest = StatusRequest.loading;    update();    try {      await updateFavorite          .getData(val, int.parse(user_id), item_id)          .then((value) async {        if (value['status'] == 'success') {          await get_Favorites();          statusRequest = StatusRequest.success;          // Get.rawSnackbar(          //   title: 'Success',          //   messageText: Text('Add To Favorites'),          // );          update();        } else {          statusRequest = StatusRequest.failure;          // Get.rawSnackbar(          //   title: 'message',          //   messageText: Text('Error !'),          // );        }      });      update();    } catch (e) {      // Get.rawSnackbar(      //   title: 'message',      //   messageText: Text('Error !'),      // );    }    update();  }  ViewFavorite view = ViewFavorite(Crud());  List<ItemModel> items_favorite = [];  delete_favorite(int item_id) async {    await updateFavorite        .getData(0, int.parse(user_id), item_id)        .then((value) async {      await get_Favorites();    });    update();  }  get_Favorites() async {    items_favorite = [];    update();    statusRequest = StatusRequest.loading;    update();    try {      await view.getData(int.parse(user_id)).then((value) {        value['data'].forEach((element) {          items_favorite.add(ItemModel.fromJson(element[0]));          isFavorite[element[0]['item_id']] = 1;          print(element[0]['item_id']);        });      });      statusRequest = StatusRequest.success;      update();    } catch (e) {      print("Exception : " + e.toString());      statusRequest = StatusRequest.failure;    }    update();  }  go_to_product_details(int index) {    Get.toNamed(      AppRouteName.product_details,      arguments: {        'item': items_favorite[index],      },    );  }  @override  void onInit() async {    await get_Favorites();    // items_favorite.forEach((element) {    //   isFavorite[element.itemId.toString()] = 1;    // });    //    // print('item Favorite : ');    // print(isFavorite);    super.onInit();  }}