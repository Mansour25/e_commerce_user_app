import 'package:cached_network_image/cached_network_image.dart';import 'package:e_commerce_project/controller/cart/CartController.dart';import 'package:e_commerce_project/controller/sqflite/sqflite_database.dart';import 'package:e_commerce_project/core/constant/AppLinkData.dart';import 'package:e_commerce_project/data/data_source/static/static.dart';import 'package:flutter/material.dart';import 'package:flutter_slidable/flutter_slidable.dart';import 'package:flutter_svg/svg.dart';import 'package:get/get.dart';import 'package:get/get_state_manager/src/simple/get_state.dart';import 'package:lottie/lottie.dart';import 'package:pull_to_refresh/pull_to_refresh.dart';class CartScreen extends StatelessWidget {  const CartScreen({Key? key}) : super(key: key);  @override  Widget build(BuildContext context) {    Get.lazyPut(() => CartController(), fenix: true);    return GetBuilder<CartController>(        autoRemove: true,        builder: (logic) {          if (logic.Cart.isEmpty) {            print(logic.Cart.isEmpty);            return Center(              child: Column(                mainAxisAlignment: MainAxisAlignment.center,                children: [                  Text('Cart Empty !',style: Get.textTheme.headline1!.copyWith(                      fontFamily: 'Cairo'                  ),),                  Lottie.asset('assets/lottie/empty3.zip'),                ],              ),            );          }          return SmartRefresher(              enablePullDown: true,              enablePullUp: true,              header: WaterDropMaterialHeader(),              controller: logic.refreshController,              onRefresh: logic.onRefresh,              onLoading: logic.onLoading,              child: Scaffold(                appBar: AppBar(                  actions: [                    IconButton(                      onPressed: () {                        SqfliteData.deleteData('1');                        logic.getData();                      },                      icon: Icon(                        Icons.delete,                        color: Colors.white,                      ),                    ),                    IconButton(                      onPressed: () {                        logic.getData();                      },                      icon: Icon(Icons.refresh),                    ),                  ],                ),                body: Container(                  margin: EdgeInsets.all(5),                  child: ListView.separated(                    physics: BouncingScrollPhysics(),                    itemCount: logic.Cart.length,                    separatorBuilder: ((context, index) {                      print(logic.refreshController.loadComplete.toString());                      return Container(                        height: 5,                      );                    }),                    itemBuilder: (context, index) {                      return InkWell(                          onTap: () {                            logic.details_item(                                int.parse(logic.Cart[index]['id_item']),                                logic.Cart[index]['count']);                          },                          child: Slidable(                            enabled: true,                            child: Card(                              child: ListTile(                                leading: Hero(                                    tag: 'item_image' +                                        '${ItemsInCart[index].itemId}',                                    child: Container(                                      width: 80,                                      padding: EdgeInsets.zero,                                      margin: EdgeInsets.zero,                                      decoration: BoxDecoration(                                          borderRadius:                                              BorderRadius.circular(10),                                          image: DecorationImage(                                            image: Image.network(                                              '${AppLinkData.image_items}/' +                                                  ItemsInCart[index]                                                      .itemImage                                                      .toString(),                                              // height: 50,                                              // width: 50,                                              fit: BoxFit.fill,                                            ).image,                                          )),                                    )),                                title: Hero(                                    tag: 'itemName' +                                        '${ItemsInCart[index].itemId}',                                    child: Text(logic.Cart[index]['name_en']                                        .toString())),                                trailing: Text(                                  logic.Cart[index]['price'].toString() +                                      '\$  * ' +                                      logic.Cart[index]['count'].toString(),                                  style: TextStyle(                                    color: Colors.white,                                  ),                                ),                              ),                            ),                            endActionPane: ActionPane(                              extentRatio: 0.5,                              motion: DrawerMotion(),                              children: [                                SlidableAction(                                  autoClose: true,                                  flex: 1,                                  label: 'Edit',                                  backgroundColor: Colors.blue,                                  onPressed: (c) {                                    logic.details_item(                                        int.parse(logic.Cart[index]['id_item']),                                        logic.Cart[index]['count']);                                  },                                ),                                SlidableAction(                                  backgroundColor: Colors.red,                                  autoClose: true,                                  flex: 1,                                  // foregroundColor: Colors.black,                                  label: 'Delete',                                  onPressed: (c) {                                    logic.remove_from_cart(context, index);                                  },                                ),                              ],                            ),                          ));                    },                  ),                ),              ));        });  }}