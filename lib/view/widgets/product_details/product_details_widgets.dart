import 'package:cached_network_image/cached_network_image.dart';import 'package:e_commerce_project/controller/cart/CartController.dart';import 'package:e_commerce_project/controller/produst_details_controller.dart';import 'package:e_commerce_project/core/constant/AppLinkData.dart';import 'package:e_commerce_project/data/data_source/static/static.dart';import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import 'package:get/get.dart';Widget TopProductPageDetails() {  return GetBuilder<ProductDetailsController>(builder: (logic) {    return Stack(      clipBehavior: Clip.none,      children: [        Container(          height: 150,          decoration: BoxDecoration(              color: Colors.deepOrange,              borderRadius: BorderRadius.only(                bottomLeft: Radius.circular(15),                bottomRight: Radius.circular(15),              )),        ),        Positioned(          top: 10,          right: Get.width / 8,          left: Get.width / 8,          child: Hero(            tag: 'item_image' + '${logic.item!.itemId}',            child: CachedNetworkImage(              imageUrl:              '${AppLinkData.image_items}/${logic.item!.itemImage.toString()}',              height: 250,              // width: ,              fit: BoxFit.fitWidth,            ),          ),        ),      ],    );  });}Widget PriceAndCountItems({  required Function()? onAdd,  required void Function()? onRemove,  required String price,  required var count,  required ProductDetailsController controller,}) {  return Row(    crossAxisAlignment: CrossAxisAlignment.center,    children: [      IconButton(        onPressed: onAdd,        icon: Icon(Icons.add),      ),      Container(        alignment: Alignment.center,        padding: EdgeInsets.only(          bottom: 2,        ),        width: 50,        decoration: BoxDecoration(          borderRadius: BorderRadius.circular(5),          border: Border.all(            color: Colors.black,          ),        ),        child: Text(          count.toString(),          style: Get.textTheme.bodyText1,        ),      ),      IconButton(        onPressed: onRemove,        icon: Icon(          Icons.remove,        ),      ),      Spacer(),      if (controller.item!.itemDiscount != 0)        Row(          children: [            Text(              '${int.parse(price) -                  int.parse(controller.item!.itemDiscount.toString()) / 100 *                      int.parse(price)}\$',              style: TextStyle(                color: Colors.deepOrange,                fontSize: 25,                height: 1.1,              ),            ),            SizedBox(              width: 10,            ),            Text(              '${price}\$',              style: TextStyle(                decoration: TextDecoration.lineThrough,                color: Colors.grey,                fontSize: 15,                height: 1.1,              ),            ),          ],        ),      if (controller.item!.itemDiscount == 0)        Text(          '${price}\$',          style: TextStyle(            color: Colors.deepOrange,            fontSize: 25,            height: 1.1,          ),        ),    ],  );}Widget subItemList() {  return GetBuilder<ProductDetailsController>(builder: (logic) {    return Row(      children: [        ...List.generate(          logic.sub_items.length,              (index) =>              Container(                margin: EdgeInsets.only(right: 10),                alignment: Alignment.center,                padding: EdgeInsets.only(                  bottom: 5,                ),                height: 60,                width: 90,                decoration: BoxDecoration(                    color: logic.sub_items[index]['active'] == '1'                        ? Colors.blueGrey[500]                        : Colors.white,                    borderRadius: BorderRadius.circular(10),                    border: Border.all(                      color: Colors.blueGrey,                    )),                child: Text(                  '${logic.sub_items[index]['name']}',                  style: TextStyle(                    color: logic.sub_items[index]['active'] == '1'                        ? Colors.white                        : Colors.blueGrey[500],                    fontWeight: FontWeight.bold,                  ),                ),              ),        ),      ],    );  });}Widget bottomSheetCart(ProductDetailsController controller,    bool is_added,) {  return GetBuilder<CartController>(builder: (logic) {    return BottomSheet(      enableDrag: false,      elevation: 0,      // clipBehavior: Clip.antiAlias,      builder: (context) {        return SizedBox(          height: Get.height / 4,          child: Column(            children: [              Text(                'do_you_want_add_to_cart'.tr,                style: TextStyle(                  color: Colors.white,                  height: 2,                  fontSize: 18,                ),              ),              Container(                height: 0.5,                color: Colors.white38,              ),              SizedBox(                height: 10,              ),              Container(                decoration: BoxDecoration(                    borderRadius: BorderRadius.only(                      topRight: Radius.circular(50),                      topLeft: Radius.circular(50),                    )),                // width: Get.width / 2,                height: 100,                child: Row(                  // mainAxisAlignment: MainAxisAlignment.start,                  crossAxisAlignment: CrossAxisAlignment.start,                  children: [                    SizedBox(                      height: 100,                      child: Image.network(                        AppLinkData.image_items +                            '/' +                            controller.item!.itemImage.toString(),                        fit: BoxFit.fitHeight,                      ),                    ),                    SizedBox(                      width: 20,                    ),                    Column(                      children: [                        Text(                          is_en == true                              ? controller.item!.itemName.toString()                              : controller.item!.itemNameAr.toString(),                          style: Theme                              .of(context)                              .textTheme                              .headline1,                        ),                        SizedBox(                          height: 10,                        ),                        Row(                          children: [                            Text(                              '${controller.item!.itemPrice} \$ * ${controller                                  .count_item} = ',                              style: TextStyle(                                height: 0,                                fontSize: 16,                                color: Colors.white,                              ),                              textAlign: TextAlign.center,                            ),                            Text(                              ' ${controller.item!.itemPrice! *                                  controller.count_item} \$',                              style: TextStyle(                                height: 0,                                fontSize: 16,                                color: Colors.red,                              ),                              textAlign: TextAlign.center,                            ),                          ],                        ),                      ],                    ),                  ],                ),              ),              SizedBox(                height: 10,              ),              Row(                mainAxisAlignment: MainAxisAlignment.spaceEvenly,                children: [                  MaterialButton(                    padding: EdgeInsets.zero,                    onPressed: () {                      is_added == false                          ? controller.addToCart(context)                          : controller.remove_from_cart(context);                    },                    child: Container(                      margin: EdgeInsets.zero,                      decoration: BoxDecoration(                          color: Colors.deepOrange,                          borderRadius: BorderRadius.circular(10)),                      padding: EdgeInsets.symmetric(                          vertical: 10, horizontal: 30),                      child: Text(                        is_added == false ? 'add'.tr : 'remove'.tr,                        style: TextStyle(fontSize: 17),                      ),                    ),                  ),                  MaterialButton(                    padding: EdgeInsets.zero,                    onPressed: () {                      Get.close(0);                    },                    child: Container(                      margin: EdgeInsets.zero,                      decoration: BoxDecoration(                          color: Colors.deepOrange,                          borderRadius: BorderRadius.circular(10)),                      padding: EdgeInsets.symmetric(                          vertical: 10, horizontal: 30),                      child: Text(                        'cansle'.tr,                        style: TextStyle(fontSize: 17),                      ),                    ),                  ),                ],              ),            ],          ),        );      },      onClosing: () {},    );  });}Widget coupon_widget() {  return Container(  );}