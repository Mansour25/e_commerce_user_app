import 'package:e_commerce_project/core/services/services.dart';import 'package:flutter/material.dart';import 'package:get/get.dart';import 'package:shared_preferences/shared_preferences.dart';class AppTheme {  static ThemeData get_theme() {    MyServices services = Get.find();    String theme = services.sharedPreferences.getString('is_dark') ?? 'false';    if (theme == 'true') {      return theme_dark;    } else {      return theme_light;    }  }  ThemeData d = ThemeData();  static ThemeData theme_light = ThemeData.light().copyWith(    unselectedWidgetColor: Colors.black54,    primaryColorDark: Colors.black.withOpacity(0.7),    backgroundColor: Colors.white70,    textTheme: const TextTheme(      headline1: TextStyle(          fontWeight: FontWeight.bold, fontSize: 22, color: Colors.black),      headline2: TextStyle(          fontWeight: FontWeight.bold, fontSize: 26, color: Colors.black),      bodyText1: TextStyle(          height: 2,          color: Colors.grey,          fontWeight: FontWeight.bold,          fontSize: 14),      bodyText2: TextStyle(        height: 2,        color: Colors.grey,        fontSize: 14,      ),    ),  );  static ThemeData theme_dark = ThemeData.dark().copyWith(    unselectedWidgetColor: Colors.white60,    primaryColorDark: Colors.black45,    // floatingActionButtonTheme: FloatingActionButtonThemeData(    //   elevation: 0,    //   backgroundColor: Colors.black26,    // ),    iconTheme: IconThemeData(      color: Colors.white70,    ),    focusColor: Colors.black26,    primaryColor: Colors.black26,    backgroundColor: Colors.black87,    appBarTheme: AppBarTheme(      backgroundColor: Colors.black26,      elevation: 0,    ),    textTheme: const TextTheme(      headline1: TextStyle(        fontWeight: FontWeight.w500,        fontSize: 20,        color: Colors.white,      ),      headline2: TextStyle(        fontWeight: FontWeight.bold,        fontSize: 26,        color: Colors.white,      ),      bodyText1: TextStyle(        height: 2,        color: Colors.white70,        fontSize: 14,      ),      bodyText2: TextStyle(        height: 2,        color: Colors.black54,        fontSize: 14,      ),    ),  );}ThemeData E_AppTheme = ThemeData(  fontFamily: "PlayfairDisplay",  textTheme: const TextTheme(    headline1: TextStyle(        fontWeight: FontWeight.bold, fontSize: 22, color: Colors.black),    headline2: TextStyle(        fontWeight: FontWeight.bold, fontSize: 26, color: Colors.black),    bodyText1: TextStyle(        height: 2,        color: Colors.grey,        fontWeight: FontWeight.bold,        fontSize: 14),    bodyText2: TextStyle(      height: 2,      color: Colors.grey,      fontSize: 14,    ),  ),  primarySwatch: Colors.blue,);ThemeData A_AppTheme = ThemeData(  fontFamily: "Cairo",  textTheme: const TextTheme(      headline1: TextStyle(          fontWeight: FontWeight.bold, fontSize: 22, color: Colors.black),      headline2: TextStyle(          fontWeight: FontWeight.bold, fontSize: 26, color: Colors.black),      bodyText1: TextStyle(          height: 2,          color: Colors.grey,          fontWeight: FontWeight.bold,          fontSize: 14),      bodyText2: TextStyle(height: 2, color: Colors.grey, fontSize: 14)),  primarySwatch: Colors.blue,);class ThemeController extends GetxController {  MyServices service = Get.find();  bool? theme_is_dark;  change_theme_val_switch(val) {    theme_is_dark = val;    if (val == true) {      service.sharedPreferences.setString('is_dark', 'true');    } else {      service.sharedPreferences.setString('is_dark', 'false');    }    update();  }  void onInit() {    String is_dark = service.sharedPreferences.getString('is_dark') ?? 'false';    if (is_dark == 'true') {      theme_is_dark = true;    } else {      theme_is_dark = false;    }    update();    super.onInit();  }  updateTheme() {    String is_dark = service.sharedPreferences.getString('is_dark') ?? 'false';    if (is_dark == 'false') {      Get.changeTheme(AppTheme.theme_dark);      service.sharedPreferences.setString('is_dark', 'false');    } else {      Get.changeTheme(AppTheme.theme_light);      service.sharedPreferences.setString('is_dark', 'true');    }    update();  }}